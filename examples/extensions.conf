;
; example "extensions.conf" (Also see "capi.conf" example)
;
; FreeBSD: /usr/local/etc/asterisk/extensions.conf
; NetBSD:  /usr/pkg/etc/asterisk/extensions.conf
;

[isdn_in_te]

; exten   => _0.,1,NoOp(Invalid incoming call ${EXTEN})
; exten   => _X.,1,Goto(isdn_in,${EXTEN},1)

[isdn_in_nt]

;
; One needs to filter the telephone numbers
; in this context, else dial in digits will
; not work, for some unknown reason. Asterisk 
; should only go into the next context when
; there is a valid number.
;

;
; Numbers starting with '0' go to
; external ISDN network. Note the '.'
;
; exten   => _0.,1,NoOp()

;
; Internal numbers and VoIP
;
; exten   => _2XXXXXX,1,NoOp()
; exten   => _3XXXXXXX,1,NoOp()
; exten   => _4XX,1,NoOp()

;
; The second step is to setup the B-channel
; so that sound appears in the telephone.
; This is done using the 'progress' command.
;
; exten   => _0.,2,capiCommand(progress)
; exten   => _X.,2,NoOp()

;
; Override the caller ID that the telephone
; provided.
;
; exten   => _X.,3,SetCallerID(004711111111)

;
; Go to next context with the current
; telephone number.
;
; exten   => _X.,4,Goto(isdn_in,${EXTEN},1)

[isdn_in]

;
; The following lines will forward calls for numbers
; starting with '0' to the external ISDN network, and accept
; additional digits, due to the '.'. The ':1' will cause the 
; '0' to be removed from the destination telephone number. 
; When one dials 0333, 333 will be dailed. When one dails 
; 0222, 222 will be dailed, and so on. Remove ':1' if that is
; not desired. Explanation of the '/bo' options: 'b' means 
; early-B3 and 'o' means overlap sending. 'l' means want late 
; inband signalling.
;
; exten => _0.,1,Dial(CAPI/ISDN1/${EXTEN:1}/bol,60)
; exten => _0.,2,Hangup

;
; The following lines will forward calls for 456 to someone
; running the IAX2 protocol:
;
; exten => _456,1,Dial(IAX2/somebody@somewhere.net,60,Tt)
; exten => _456,2,Hangup

;
; The following lines will forward calls for 457 to someone
; running the SIP protocol:
;
; exten => _457,1,Dial(SIP/somebody_else@somewhere.net,60,Tt)
; exten => _457,2,Hangup


; 
; The following lines will forward calls for 37041111,
; to the "demo" context after 9 seconds:
;
; exten => _37041111,1,Wait(9)
; exten => _37041111,2,Goto(demo,s,1)

;
; The following lines will forward various destinations to
; the internal ISDN network:
;
; exten => _37042222,1,Dial(CAPI/ISDN2/37042222/,60)
; exten => _37043333,1,Dial(CAPI/ISDN2/37042222/,60)
; exten => _38324444,1,Dial(CAPI/ISDN2/38324444/,60)
; exten => _38355555,1,Dial(CAPI/ISDN2/38324444/,60)

;
; The following lines will forward all 7-digit numbers
; starting with '2' to an external SIP network:
;
; exten => _2XXXXXX,1,NoOp(Outgoing call to ${EXTEN})
; exten => _2XXXXXX,2,SetCallerID(2000201)
; exten => _2XXXXXX,3,Dial(SIP/${EXTEN}@other_network.com,60,Tt)
; exten => _2XXXXXX,4,Hangup

;
; The following lines will forward an incoming call to 
; multiple devices at the same time, separated by '&'
; in the 'Dial(' string:
;
; exten => 82834,1,NoOp(Call to 82834)
: exten => 82834,2,SetAccount(2000000)
; exten => 82834,3,Dial(CAPI/ISDN2/50/b&SIP/2000000&CAPI/ISDN1/0107801791111111111/bl)
;

;
; The following lines will playback a message
; for all invalid extensions:
;
; exten => i,1,Playback(invalid)
; exten => i,2,Wait(5)
; exten => i,3,Playback(invalid)
; exten => i,4,Wait(5)
; exten => i,5,Hangup
;

[out_isdn]

;
; The following lines will forward calls to numbers
; starting with '0' to the external ISDN network:
;
; This line is used for debugging and will print 
; a message on the Asterisk console:
; exten => _0X.,1,NoOp(Dialing ${EXTEN})
;
; This line sets the calling number:
; exten => _0X.,2,SetCallerID(82834)
;
; This line will hide the calling number:
; exten => _0X.,3,SetCallerPres(prohib_not_screened)
;
; This line allows presentation of the calling number (default):
; exten => _0X.,4,SetCallerPres(allowed)
;
; This line dials the external number:
; NOTE: if the destination number is not complete,
; one should use the '/bol' options instead of '/bl'
; exten => _0X.,5,Dial(CAPI/ISDN1/${EXTEN}/bl,60)
;
; This line will tell asterisk to hangup:
; exten => _0X.,6,HangUp
;

[isdn_in_nt_alternative]

;
; wait for end of telephone number
; 
; NOTE: the timeouts are set too
; high so that they do not kill
; the dial in digit process
;

exten => _X., 1, DigitTimeout(120)
exten => _X., 2, ResponseTimeout(120)
exten => _X., 3, SetVar(TEMP=${CHANNEL})

;
; XXX the following wait is a little
; troublesome. Setting it too slow
; will cause things to not
; work XXX
;

exten => _X., 4, Wait(3)
exten => _X., 5, GotoIf($["${TEMP}" = "${CHANNEL}"] ? 6 : 3)

;
; get the real destination
; telephone number, hence
; the extension is not
; updated:
;

exten => _X., 6, Cut(TEMP=CHANNEL,/,3)
exten => _X., 7, Cut(TEMP=TEMP,-,1)

;
; enable progress for calls to ISDN
; so that the caller can hear
; progress sounds
;

exten => _0., 8, capiCommand(progress)
exten => _X., 8, NoOp()

;
; send ringing signal back to ISDN
; so that the hardware does not
; time out and hang up:
;

exten => _X., 9, Ringing
exten => _X.,10, SetCallerID(004744444444)
exten => _X.,11, Goto(isdn_in,${TEMP},1)

